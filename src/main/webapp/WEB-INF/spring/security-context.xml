<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/security
				http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- /resources/** 요청을 시큐리티에 적용시키지 않는다 -->
	<security:http pattern="/resources/**" security="none" />
	
	<security:http auto-config='true' use-expressions="true">
		<!-- 각 url 패턴을 인터셉트해 access에 지정된 권한을 가진 사용자만 접근할 수 있다 -->
		<security:intercept-url pattern="/" 
			access="permitAll" />
		<security:intercept-url pattern="/userlogin"
			access="hasAnyRole('ROLE_REGULAR_MEM','ROLE_ASSOCIATE_MEM','ROLE_TEACHER','ROLE_SYSTEM_ADMIN','ROLE_OPERATION_ADMIN')" />
		<security:intercept-url pattern="/admin/**"
			access="hasAnyRole('ROLE_SYSTEM_ADMIN','ROLE_OPERATION_ADMIN')" />
		<security:intercept-url pattern="/teacher/**"
			access="hasRole('ROLE_TEACHER')" />
		<security:intercept-url pattern="/member/**"
			access="hasAnyRole('ROLE_REGULAR_MEM','ROLE_ASSOCIATE_MEM','ROLE_TEACHER','ROLE_SYSTEM_ADMIN','ROLE_OPERATION_ADMIN')" />
		<security:intercept-url pattern="/anonymous/**"	
			access="permitAll" />

		<!-- 
			/login 요청 패이지는 시큐리티가 적용되는 로그인(인증)패이지라고 지정
			parameter 지정
			인증 성공시 가는 핸들러 지정
			인증 실패시 요정하는 url 지정  
		-->
		<security:form-login login-page="/login"
			username-parameter="member_id" 
			password-parameter="member_pw"
			login-processing-url="/login" 
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-url="/login?error=1" />
		<!-- 권한이 맞지 않은 사용자가 접근시 /Access_Denied요청 -->
		<security:access-denied-handler error-page="/Access_Denied" />
		
		<!-- csrf에 대한 공격을 대비하기 위해 설정 -->
		<security:csrf />
	</security:http>
	
	<!-- AuthenticationSuccessHandler라는 핸들러 클래스를 빈에 등록 -->
	<bean id="authenticationSuccessHandler"	class="take.a.talent.member.service.AuthenticationSuccessHandler" />

	<!-- UserAuthenticationService라는 서비스 클래스를 빈에 등록 -->
	<bean id="userService" class="take.a.talent.member.service.UserAuthenticationService">
		<!-- DB연동하기 위해 SqlSession을 포함 -->
		<constructor-arg name="sqlSession" ref="sqlSessionTemplate" />
	</bean>

</beans>

	