<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="take.a.talent.member.service.MemberMapper">

	 <resultMap	type="take.a.talent.member.vo.MemberVo" id="MemberVo"> 
		
		<result property="memberId" column="member_id" />
		<result property="memberPassword" column="member_password" />
		<result property="memberName" column="member_name" />
		<result property="memberGender" column="member_gender" />
		<result property="memberAge" column="member_age" />
		<result property="memberPhone" column="member_phone" />
		<result property="memberBirthday" column="member_birthday" />
		<result property="memberNickname" column="member_nickname" />
		<result property="memberPoint" column="member_point" />
		<result property="memberAuthority_no" column="member_authority_no" />
		<result property="memberEmail" column="member_email" />
		<result property="memberAgreement" column="member_agreement" />
		<result property="memberSns" column="member_sns" />
		<result property="memberStudentExp" column="member_student_exp" />
		<result property="memberStudentLevel" column="member_student_level" />
		<result property="memberTotalClassApplicationDate" column="member_total_class_application_date" />
		<result property="memberStudentComplimentCard" column="member_student_compliment_card" />
		<result property="memberLoginState" column="member_login_state" />
		<result property="memberAddress" column="member_address" />
		<result property="memberMemo" column="member_memo" />
		
		
	</resultMap>

	<!-- 폼에서 입력한 id를 where절에 넣고 DB에 있는 해당 id, pw, 권한을 가져오는 쿼리이다 resultType은 map이다 -->
	<select id="selectMemberTest" resultType="map">
		SELECT 
		m.member_id as member_id
		,m.member_password as member_pw
		,ma.member_authority_name as authority
		FROM member m
		INNER JOIN member_authority ma
		ON m.member_authority_no = ma.member_authority_no
		WHERE m.member_id = #{username};
	</select>
	
	
	<!--회원가입시 아이디 중복체크  -->
	<!-- SELECT EXISTS를 사용하여 중복되는 아이디가 있으면 TRUE, 없으면 FALSE를 반환하므로 resultType도 boolean   -->
	<select id ="idCheck" parameterType="String" resultType="boolean">
		SELECT EXISTS(
		SELECT member_id
		FROM member
		WHERE member_id=#{member_id});
		
	</select> 
	
<!-- 	<select id="selectForUpdateMember" parameterType="String" resultType="take.a.talent.member.vo.MemberVo">
		SELECT member_name
		, member_nickname
		, member_gender
		, member_birthday
		, member_phone
		, member_email
		FROM member
		WHERE member_id = #{member_id};
	</select> -->
	
	
	<!-- 회원가입  수정중!!!!! -->
	<insert id="insertMember" parameterType="take.a.talent.member.vo.MemberVo">
		INSERT INTO member(member_id, member_password, member_name, meber_gender, member_social_number, member_phone, member_address
		, member_address_detail, member_email, member_agreement)
			VALUES (#{memberId}, #{memberPassword}, #{memberName},#{memberGender}, #{memberPhone}, #{memberAddress}, #{memberAddressDetail},#{memberEmail},#{memberAgreement});
			
	</insert>
	
	
	<!-- 회원 정보 수정(비밀번호, 주소 제외) -->	
	<update id="updateMember" parameterType="take.a.talent.member.vo.MemberVo">
		UPDATE member 
		SET member_name = #{memberName}
		, member_nickname = #{memberNickname}
		, member_gender = #{memberGender}
		, member_birthday = #{memberBirthday}
		, member_phone = #{memberPhone}
		, member_email = #{memberEmail}
		WHERE member_id = #{memberId}; 
	</update>

	

	

</mapper>
  